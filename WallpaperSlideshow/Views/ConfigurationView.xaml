<Window x:Class="WallpaperSlideshow.Views.ConfigurationView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:WallpaperSlideshow.Models" 
        xmlns:viewmodels="clr-namespace:WallpaperSlideshow.ViewModels"
        mc:Ignorable="d" 
        x:Name="RootWindow" Title="Wallpaper Slideshow Configuration" WindowStartupLocation="CenterScreen" Height="450" Width="800" Icon="/app.ico">
    <Window.DataContext>
        <viewmodels:ConfigurationViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <ItemsControl x:Name="MonitorPreview" Grid.Row="0" Grid.ColumnSpan="2" 
                      ItemsSource="{x:Static models:Monitor.AllMonitors}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border Grid.RowSpan="2" Grid.ColumnSpan="2" BorderBrush="Gray" BorderThickness="1" Cursor="Hand">
                            <Border.Width>
                                <MultiBinding Converter="{StaticResource MonitorPreviewWidthConverter}">
                                    <Binding Path="Screen.Bounds.Width"/>
                                    <Binding Path="(models:Monitor.AllBounds)"/>
                                    <Binding Path="ActualWidth" ElementName="MonitorPreview"/>
                                </MultiBinding>
                            </Border.Width>
                            <Border.Height>
                                <MultiBinding Converter="{StaticResource MonitorPreviewHeightConverter}">
                                    <Binding Path="Screen.Bounds.Height"/>
                                    <Binding Path="(models:Monitor.AllBounds)"/>
                                    <Binding Path="ActualHeight" ElementName="MonitorPreview"/>
                                </MultiBinding>
                            </Border.Height>
                            <Border.InputBindings>
                                <MouseBinding Gesture="LeftClick" Command="{Binding DataContext.SelectMonitorCommand, ElementName=RootWindow}" CommandParameter="{Binding}"/>
                            </Border.InputBindings>
                            <Border.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Open Folder" Command="{Binding DataContext.OpenFolderCommand, Source={x:Reference RootWindow}}" CommandParameter="{Binding}"/>
                                    <MenuItem Header="Open in Browser" Command="{Binding DataContext.OpenInBrowserCommand, Source={x:Reference RootWindow}}" CommandParameter="{Binding}"/>
                                    <MenuItem Header="Copy Path" Command="{Binding DataContext.CopyWallpaperPathCommand, Source={x:Reference RootWindow}}" CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </Border.ContextMenu>
                            <Image Source="{Binding CurrentWallpaperPath}" Stretch="UniformToFill"/>
                        </Border>
                        <TextBlock Text="{Binding Index, StringFormat=Monitor {0}}" Foreground="White" Background="#cc000000"/>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource MonitorPreviewLeftConverter}">
                                <Binding Path="Screen.Bounds.Left"/>
                                <Binding Path="(models:Monitor.AllBounds)"/>
                                <Binding Path="ActualWidth" ElementName="MonitorPreview"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Canvas.Top">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource MonitorPreviewTopConverter}">
                                <Binding Path="Screen.Bounds.Top"/>
                                <Binding Path="(models:Monitor.AllBounds)"/>
                                <Binding Path="ActualHeight" ElementName="MonitorPreview"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>

        <GroupBox Grid.Row="2" Grid.ColumnSpan="2" Header="General">
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0">Swap Interval (in seconds):</TextBlock>
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=(models:Monitor.IntervalSeconds), Converter={StaticResource DoubleConverter}, Mode=TwoWay}"/>

                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Right">
                    <Button Command="{Binding AdvanceSlideShowCommand}">Advance Slide-Show</Button>
                </StackPanel>
            </Grid>
        </GroupBox>

        <DataGrid x:Name="Monitors" Grid.Row="1" Grid.Column="0" AutoGenerateColumns="False" ItemsSource="{x:Static models:Monitor.AllMonitors}" IsReadOnly="True"
                  SelectedItem="{Binding SelectedMonitor}" SelectionMode="Single" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" HeadersVisibility="Column">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Monitor" Binding="{Binding Index}"/>
                <DataGridCheckBoxColumn Header="Active" Binding="{Binding Active}"/>
                <DataGridTextColumn Header="X" Binding="{Binding Screen.Bounds.Left}"/>
                <DataGridTextColumn Header="Y" Binding="{Binding Screen.Bounds.Top}"/>
                <DataGridTextColumn Header="Geometry" Binding="{Binding Converter={StaticResource MonitorToGeometryTypeConverter}}"/>
            </DataGrid.Columns>
        </DataGrid>

        <Grid Grid.Row="1" Grid.Column="1" DataContext="{Binding SelectedItem, ElementName=Monitors}" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0">Source Path:</TextBlock>
            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=(models:Monitor.SourcePath), Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
        </Grid>
    </Grid>
</Window>